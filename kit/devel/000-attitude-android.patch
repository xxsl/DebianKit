diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/.config attitude.armel/.config
--- attitude.orig/.config	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/.config	2014-05-08 14:18:17.000000000 +0200
@@ -0,0 +1,55 @@
+CONFIG_HAVE_DOT_CONFIG=y
+CONFIG_TARGET_android=y
+CONFIG_DEVEL=y
+CONFIG_TOOLCHAINOPTS=y
+CONFIG_GCC_VERSION_4_6_LINARO=y
+CONFIG_PACKAGE_e2fsprogs-static=m
+CONFIG_PACKAGE_tune2fs-static=m
+CONFIG_PACKAGE_openvpn-static=m
+CONFIG_PACKAGE_pkgdetails-static=m
+CONFIG_BUSYBOX_CONFIG_FEATURE_PREFER_APPLETS=y
+CONFIG_BUSYBOX_CONFIG_STATIC=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_XZ=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_LZMA=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SEAMLESS_BZ2=y
+CONFIG_BUSYBOX_CONFIG_AR=y
+CONFIG_BUSYBOX_CONFIG_UNLZMA=y
+CONFIG_BUSYBOX_CONFIG_UNXZ=y
+CONFIG_BUSYBOX_CONFIG_SHA1SUM=y
+CONFIG_BUSYBOX_CONFIG_SHA256SUM=y
+CONFIG_BUSYBOX_CONFIG_SHA512SUM=y
+CONFIG_BUSYBOX_CONFIG_STAT=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_STAT_FORMAT=y
+# CONFIG_BUSYBOX_CONFIG_START_STOP_DAEMON is not set
+# CONFIG_BUSYBOX_CONFIG_HALT is not set
+# CONFIG_BUSYBOX_CONFIG_INIT is not set
+# CONFIG_BUSYBOX_CONFIG_FEATURE_SHADOWPASSWDS is not set
+# CONFIG_BUSYBOX_CONFIG_PASSWD is not set
+CONFIG_BUSYBOX_CONFIG_FDISK=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_FDISK_WRITABLE=y
+# CONFIG_BUSYBOX_CONFIG_HWCLOCK is not set
+CONFIG_BUSYBOX_CONFIG_LOSETUP=y
+# CONFIG_BUSYBOX_CONFIG_SWITCH_ROOT is not set
+# CONFIG_BUSYBOX_CONFIG_CROND is not set
+# CONFIG_BUSYBOX_CONFIG_CRONTAB is not set
+# CONFIG_BUSYBOX_CONFIG_WATCHDOG is not set
+# CONFIG_BUSYBOX_CONFIG_NC is not set
+# CONFIG_BUSYBOX_CONFIG_PING is not set
+# CONFIG_BUSYBOX_CONFIG_ARPING is not set
+# CONFIG_BUSYBOX_CONFIG_BRCTL is not set
+CONFIG_BUSYBOX_CONFIG_HOSTNAME=y
+# CONFIG_BUSYBOX_CONFIG_NETMSG is not set
+# CONFIG_BUSYBOX_CONFIG_NETSTAT is not set
+# CONFIG_BUSYBOX_CONFIG_NSLOOKUP is not set
+# CONFIG_BUSYBOX_CONFIG_NTPD is not set
+# CONFIG_BUSYBOX_CONFIG_TELNET is not set
+# CONFIG_BUSYBOX_CONFIG_TELNETD is not set
+# CONFIG_BUSYBOX_CONFIG_TRACEROUTE is not set
+# CONFIG_BUSYBOX_CONFIG_UDHCPC is not set
+# CONFIG_BUSYBOX_CONFIG_VCONFIG is not set
+CONFIG_BUSYBOX_CONFIG_FUSER=y
+CONFIG_BUSYBOX_CONFIG_RENICE=y
+CONFIG_BUSYBOX_CONFIG_FEATURE_SH_STANDALONE=y
+# CONFIG_BUSYBOX_CONFIG_SYSLOGD is not set
+# CONFIG_BUSYBOX_CONFIG_KLOGD is not set
+# CONFIG_BUSYBOX_CONFIG_LOGGER is not set
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/busybox/patches/991-android-shell-and-blockdev.patch attitude.armel/package/busybox/patches/991-android-shell-and-blockdev.patch
--- attitude.orig/package/busybox/patches/991-android-shell-and-blockdev.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/busybox/patches/991-android-shell-and-blockdev.patch	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,33 @@
+diff -Nur busybox-1.19.4.orig/include/libbb.h busybox-1.19.4/include/libbb.h
+--- busybox-1.19.4.orig/include/libbb.h	2014-05-02 17:37:27.000000000 +0200
++++ busybox-1.19.4/include/libbb.h	2014-05-02 17:45:27.000000000 +0200
+@@ -1724,7 +1724,7 @@
+  * use bb_default_login_shell and following defines.
+  * If you change LIBBB_DEFAULT_LOGIN_SHELL,
+  * don't forget to change increment constant. */
+-#define LIBBB_DEFAULT_LOGIN_SHELL  "-/bin/sh"
++#define LIBBB_DEFAULT_LOGIN_SHELL  "-/system/bin/sh"
+ extern const char bb_default_login_shell[];
+ /* "/bin/sh" */
+ #define DEFAULT_SHELL              (bb_default_login_shell+1)
+diff -Nur busybox-1.19.4.orig/util-linux/fdisk.c busybox-1.19.4/util-linux/fdisk.c
+--- busybox-1.19.4.orig/util-linux/fdisk.c	2012-02-04 20:24:56.000000000 +0100
++++ busybox-1.19.4/util-linux/fdisk.c	2014-05-02 17:47:18.000000000 +0200
+@@ -2781,7 +2781,7 @@
+ 	   the process hangs on the attempt to read a music CD.
+ 	   So try to be careful. This only works since 2.1.73. */
+ 
+-	if (strncmp("/dev/hd", device, 7))
++	if (strncmp("/dev/block/hd", device, 7))
+ 		return 0;
+ 
+ 	snprintf(buf, sizeof(buf), "/proc/ide/%s/media", device+5);
+@@ -2886,7 +2886,7 @@
+ 				&ma, &mi, &sz, ptname) != 4)
+ 			continue;
+ 
+-		sprintf(devname, "/dev/%s", ptname);
++		sprintf(devname, "/dev/block/%s", ptname);
+ 		if (is_whole_disk(devname))
+ 			open_list_and_close(devname, 0);
+ 	}
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/busybox/patches/993-android-precmd-alias.patch attitude.armel/package/busybox/patches/993-android-precmd-alias.patch
--- attitude.orig/package/busybox/patches/993-android-precmd-alias.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/busybox/patches/993-android-precmd-alias.patch	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,13 @@
+diff -Nur busybox-1.19.4.orig/shell/ash.c busybox-1.19.4/shell/ash.c
+--- busybox-1.19.4.orig/shell/ash.c	2014-05-02 17:37:27.000000000 +0200
++++ busybox-1.19.4/shell/ash.c	2014-05-02 17:53:08.000000000 +0200
+@@ -13105,6 +13105,9 @@
+ 	INIT_G_var();
+ #if ENABLE_ASH_ALIAS
+ 	INIT_G_alias();
++	// Android mksh: PS1 features a 'precmd' that typically
++	// is empty which typically triggers "file not found."
++	setalias("precmd", "");
+ #endif
+ 	INIT_G_cmdtable();
+ 
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/e2fsprogs-static/Makefile attitude.armel/package/e2fsprogs-static/Makefile
--- attitude.orig/package/e2fsprogs-static/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/e2fsprogs-static/Makefile	2014-05-07 08:52:50.000000000 +0200
@@ -0,0 +1,102 @@
+#
+# Copyright (C) 2006-2012 OpenWrt.org
+# Copyright 2010 Vertical Communications
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=e2fsprogs-static
+PKG_VERSION:=1.42.4
+PKG_MD5SUM:=b6e296f210d642361b7394437ff0f318
+PKG_RELEASE:=1
+
+PKG_SOURCE:=e2fsprogs-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=@SF/e2fsprogs
+
+PKG_BUILD_DEPENDS:=util-linux
+PKG_INSTALL:=1
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/e2fsprogs-static/Default
+  URL:=http://e2fsprogs.sourceforge.net/
+  SUBMENU:=Filesystem
+endef
+
+define Package/e2fsprogs-static
+$(call Package/e2fsprogs-static/Default)
+  SECTION:=utils
+  CATEGORY:=Utilities
+  TITLE:=Ext2/3/4 filesystem utilities (static)
+endef
+
+define Package/e2fsprogs-static/description
+ This package contains essential ext2 filesystem utilities which consists of
+ e2fsck, mke2fs, and tune2fs as static binaries.
+endef
+
+TARGET_CFLAGS += $(FPIC)
+
+CONFIGURE_ARGS += \
+	--enable-elf-shlibs	\
+	--disable-libuuid	\
+	--disable-uuidd		\
+	--disable-tls		\
+	--disable-nls		\
+	--disable-rpath
+
+define Build/Prepare
+	rm -rf $(PKG_BUILD_DIR)
+	mkdir -p $(PKG_BUILD_DIR)
+	tar --strip-components=1 -xzvf $(DL_DIR)/$(PKG_SOURCE) -C $(PKG_BUILD_DIR)/
+	$(Build/Patch)
+	$(CP) $(SCRIPT_DIR)/config.{guess,sub} $(PKG_BUILD_DIR)/config/
+endef
+
+define Build/Compile
+	$(MAKE) -C $(PKG_BUILD_DIR)/util \
+		BUILDCC="$(HOSTCC)" \
+		CFLAGS="" \
+		CPPFLAGS="" \
+		LDFLAGS="" \
+		subst
+	$(MAKE) -C $(PKG_BUILD_DIR) \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(PKG_INSTALL_DIR)" \
+		all
+	$(MAKE) -C $(PKG_BUILD_DIR)/misc \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(PKG_INSTALL_DIR)" \
+		tune2fs.static
+	$(MAKE) -C $(PKG_BUILD_DIR)/misc \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(PKG_INSTALL_DIR)" \
+		mke2fs.static
+	$(MAKE) -C $(PKG_BUILD_DIR)/e2fsck \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(PKG_INSTALL_DIR)" \
+		e2fsck.static
+endef
+
+define Build/InstallDev
+	$(MAKE) -C $(PKG_BUILD_DIR) \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(1)" \
+		install-libs
+	$(MAKE) -C $(PKG_BUILD_DIR)/lib/ext2fs \
+		BUILDCC="$(HOSTCC)" \
+		DESTDIR="$(1)" \
+		install
+endef
+
+define Package/e2fsprogs-static/install
+	$(INSTALL_DIR) $(1)/usr/sbin
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/misc/mke2fs.static $(1)/usr/sbin/mke2fs
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/misc/tune2fs.static $(1)/usr/sbin/tune2fs
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/e2fsck/e2fsck.static $(1)/usr/sbin/e2fsck
+	$(INSTALL_DIR) $(1)/usr/lib
+endef
+
+$(eval $(call BuildPackage,e2fsprogs-static))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/e2fsprogs-static/patches/900-mtab-hack.patch attitude.armel/package/e2fsprogs-static/patches/900-mtab-hack.patch
--- attitude.orig/package/e2fsprogs-static/patches/900-mtab-hack.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/e2fsprogs-static/patches/900-mtab-hack.patch	2014-05-07 09:25:09.000000000 +0200
@@ -0,0 +1,12 @@
+diff -Nur e2fsprogs-1.42.4.orig/lib/ext2fs/ismounted.c e2fsprogs-1.42.4/lib/ext2fs/ismounted.c
+--- e2fsprogs-1.42.4.orig/lib/ext2fs/ismounted.c	2012-04-27 00:44:12.000000000 +0200
++++ e2fsprogs-1.42.4/lib/ext2fs/ismounted.c	2014-05-07 09:24:42.000000000 +0200
+@@ -185,7 +185,7 @@
+ #ifndef MOUNTED
+ #define MOUNTED _PATH_MOUNTED
+ #endif /* MOUNTED */
+-	retval = check_mntent_file(MOUNTED, file, mount_flags, mtpt, mtlen);
++	retval = check_mntent_file("/proc/mounts", file, mount_flags, mtpt, mtlen);
+ 	return retval;
+ #else
+ 	*mount_flags = 0;
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/e2fsprogs-static/patches/901-fix-static-tune2fs.patch attitude.armel/package/e2fsprogs-static/patches/901-fix-static-tune2fs.patch
--- attitude.orig/package/e2fsprogs-static/patches/901-fix-static-tune2fs.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/e2fsprogs-static/patches/901-fix-static-tune2fs.patch	2014-05-07 09:26:43.000000000 +0200
@@ -0,0 +1,14 @@
+diff -Nur e2fsprogs-1.42.4.orig/misc/Makefile.in e2fsprogs-1.42.4/misc/Makefile.in
+--- e2fsprogs-1.42.4.orig/misc/Makefile.in	2012-06-04 18:49:49.000000000 +0200
++++ e2fsprogs-1.42.4/misc/Makefile.in	2014-05-07 09:26:12.000000000 +0200
+@@ -161,8 +161,8 @@
+ tune2fs.static: $(TUNE2FS_OBJS) $(STATIC_DEPLIBS) $(STATIC_LIBE2P) $(DEPSTATIC_LIBBLKID)
+ 	$(E) "	LD $@"
+ 	$(Q) $(CC) $(LDFLAGS_STATIC) -o tune2fs.static $(TUNE2FS_OBJS) \
+-		$(STATIC_LIBS) $(STATIC_LIBBLKID) $(STATIC_LIBUUID) \
+-		$(STATIC_LIBQUOTA) $(STATIC_LIBE2P) $(LIBINTL)
++		$(STATIC_LIBQUOTA) $(STATIC_LIBS) $(STATIC_LIBBLKID) $(STATIC_LIBUUID) \
++		$(STATIC_LIBE2P) $(LIBINTL)
+ 
+ tune2fs.profiled: $(PROFILED_TUNE2FS_OBJS) $(PROFILED_DEPLIBS) \
+ 		$(PROFILED_E2P) $(DEPPROFILED_LIBBLKID) $(DEPPROFILED_LIBUUID) \
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/lzo/Makefile attitude.armel/package/lzo/Makefile
--- attitude.orig/package/lzo/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/lzo/Makefile	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,60 @@
+#
+# Copyright (C) 2006-2010 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=lzo
+PKG_VERSION:=2.05
+PKG_RELEASE:=1
+
+PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=http://www.oberhumer.com/opensource/lzo/download/
+PKG_MD5SUM:=c67cda5fa191bab761c7cb06fe091e36
+
+PKG_FIXUP:=libtool
+
+PKG_INSTALL:=1
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/liblzo
+  SECTION:=libs
+  CATEGORY:=Libraries
+  TITLE:=A real-time data compression library
+  URL:=http://www.oberhumer.com/opensource/lzo/
+endef
+
+define Package/liblzo/description
+LZO is a data compression library which is suitable for data de-/compression in
+real-time. This means it favours speed over compression ratio.
+endef
+
+define Build/Configure
+	$(call Build/Configure/Default, \
+		--enable-shared \
+		--enable-static \
+	)
+endef
+
+TARGET_CFLAGS += $(FPIC)
+
+MAKE_FLAGS += CFLAGS_O="$(TARGET_CFLAGS)"
+
+define Build/InstallDev
+	$(INSTALL_DIR) $(1)/usr/include
+	$(CP) $(PKG_INSTALL_DIR)/usr/include/lzo $(1)/usr/include/
+
+	$(INSTALL_DIR) $(1)/usr/lib
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/liblzo2.{a,so*} $(1)/usr/lib/
+endef
+
+define Package/liblzo/install
+	$(INSTALL_DIR) $(1)/usr/lib
+	$(CP) $(PKG_INSTALL_DIR)/usr/lib/liblzo2.so* $(1)/usr/lib/
+endef
+
+$(eval $(call BuildPackage,liblzo))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/openssl/Makefile attitude.armel/package/openssl/Makefile
--- attitude.orig/package/openssl/Makefile	2014-05-02 09:40:55.000000000 +0200
+++ attitude.armel/package/openssl/Makefile	2014-05-07 09:37:05.000000000 +0200
@@ -75,7 +75,26 @@
 
 OPENSSL_NO_CIPHERS:= no-idea no-md2 no-mdc2 no-rc5 no-sha0 no-smime \
 	no-rmd160 no-aes192 no-ripemd no-camellia no-ans1 no-krb5
-OPENSSL_OPTIONS:= shared no-ec no-err no-hw zlib-dynamic no-sse2
+OPENSSL_OPTIONS:= shared no-ec no-err no-hw zlib no-sse2
+
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-cast
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-cms
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-dso
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-ecdh
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-ecdsa
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-engine
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-jpake
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-perlasm
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-rc2
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-rc4
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-seed
+OPENSSL_NO_CIPHERS:=$(OPENSSL_NO_CIPHERS) no-store
+
+OPENSSL_OPTIONS:=$(OPENSSL_OPTIONS) no-asm
+OPENSSL_OPTIONS:=$(OPENSSL_OPTIONS) no-chain_verify
+OPENSSL_OPTIONS:=$(OPENSSL_OPTIONS) no-locking
+OPENSSL_OPTIONS:=$(OPENSSL_OPTIONS) no-ssl2
+OPENSSL_OPTIONS:=$(OPENSSL_OPTIONS) no-ssl3
 
 ifdef CONFIG_OPENSSL_ENGINE_CRYPTO
   OPENSSL_OPTIONS += -DHAVE_CRYPTODEV
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/openvpn-static/Makefile attitude.armel/package/openvpn-static/Makefile
--- attitude.orig/package/openvpn-static/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/openvpn-static/Makefile	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,69 @@
+#
+# Copyright (C) 2006-2010 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=openvpn-static
+PKG_VERSION:=2.1.3
+PKG_RELEASE:=1
+
+PKG_SOURCE:=openvpn-$(PKG_VERSION).tar.gz
+PKG_SOURCE_URL:=http://openvpn.net/release @SF/openvpn
+PKG_MD5SUM:=7486d3e270ba4b033e311d3e022a0ad7
+
+PKG_INSTALL:=1
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/openvpn-static
+  SECTION:=net
+  CATEGORY:=Network
+  DEPENDS:=+kmod-tun +libopenssl +liblzo
+  TITLE:=Open source VPN solution using SSL (static)
+  URL:=http://openvpn.net
+  SUBMENU:=VPN
+endef
+
+define Package/openvpn-static/description
+	 Open source VPN solution using SSL (statically linked binary)
+endef
+
+CONFIGURE_ARGS+= \
+	--disable-pthread \
+	--disable-debug \
+	--disable-plugins \
+	--enable-management \
+	--disable-socks \
+	--enable-password-save \
+	--enable-small \
+	--with-ifconfig-path=/data/local/deb/armel/ifconfig \
+	--with-route-path=/data/local/deb/armel/route
+
+TARGET_CFLAGS += -static
+
+define Build/Prepare
+	rm -rf $(PKG_BUILD_DIR)
+	mkdir -p $(PKG_BUILD_DIR)
+	tar --strip-components=1 -xzvf $(DL_DIR)/$(PKG_SOURCE) -C $(PKG_BUILD_DIR)/
+	$(Build/Patch)
+endef
+
+define Build/Configure
+	$(call Build/Configure/Default, \
+		$(CONFIGURE_ARGS)  \
+		,\
+		ac_cv_func_epoll_create=no \
+		LIBS=-lz \
+	)
+endef
+
+define Package/openvpn-static/install
+	$(INSTALL_DIR) $(1)/usr/sbin
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/sbin/openvpn $(1)/usr/sbin/
+endef
+
+$(eval $(call BuildPackage,openvpn-static))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/openvpn-static/patches/000-dev-tun.patch attitude.armel/package/openvpn-static/patches/000-dev-tun.patch
--- attitude.orig/package/openvpn-static/patches/000-dev-tun.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/openvpn-static/patches/000-dev-tun.patch	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,12 @@
+diff -Nur openvpn-static-2.1.3.orig/tun.c openvpn-static-2.1.3/tun.c
+--- openvpn-static-2.1.3.orig/tun.c	2010-07-27 23:44:33.000000000 +0200
++++ openvpn-static-2.1.3/tun.c	2011-03-05 10:41:14.735652241 +0100
+@@ -1096,7 +1096,7 @@
+        */
+       const char *node = dev_node;
+       if (!node)
+-	node = "/dev/net/tun";
++	node = "/dev/tun";
+ 
+       /*
+        * Open the interface
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/pkgdetails-static/files/pkgdetails.c attitude.armel/package/pkgdetails-static/files/pkgdetails.c
--- attitude.orig/package/pkgdetails-static/files/pkgdetails.c	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/pkgdetails-static/files/pkgdetails.c	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,347 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <ctype.h>
+#include <stdarg.h>
+#include <errno.h>
+
+#define MAX_LINE 1000
+#define MAX_PKGS 100
+
+char *checksum_field=NULL;
+
+static void oom_die(void)
+{
+    fprintf(stderr, "Out of memory!\n");
+    exit(1);
+}
+
+static char *xvasprintf(const char *fmt, va_list ap) {
+    char *ret;
+
+    if (vasprintf (&ret, fmt, ap) < 0) {
+        if (errno == ENOMEM)
+            oom_die();
+        return NULL;
+    }
+    return ret;
+}
+
+static char *xasprintf(const char *fmt, ...) {
+    va_list ap;
+    char *ret;
+
+    va_start(ap, fmt);
+    ret = xvasprintf(fmt, ap);
+    va_end(ap);
+    return ret;
+}
+
+static char *fieldcpy(char *dst, char *fld) {
+    while (*fld && *fld != ':') 
+        fld++;
+    if (!*(fld++)) 
+        return NULL;
+    while (isspace(*fld)) fld++;
+    return strcpy(dst, fld);
+}
+
+static void outputdeps(char *deps) {
+    char *pch = deps;
+
+    while (1) {
+        while (isspace(*pch)) pch++;
+        if (!*pch) break;
+
+        while (*pch && *pch != '(' && *pch != '|' && *pch != ','
+               && !isspace(*pch))
+        {
+            fputc(*pch++, stdout);
+        }
+        fputc('\n', stdout);
+        while (*pch && *pch++ != ',') (void)NULL;
+    }
+}
+
+static void dogetdeps(char *pkgsfile, char **in_pkgs, int pkgc) {
+    char buf[MAX_LINE];
+    char cur_pkg[MAX_LINE];
+    char cur_deps[MAX_LINE];
+    char cur_predeps[MAX_LINE];
+    char prev_pkg[MAX_LINE];
+    char *pkgs[MAX_PKGS];
+    int i;
+    int skip;
+    FILE *f;
+    int output_pkg = -1;
+
+    cur_pkg[0] = cur_deps[0] = cur_predeps[0] = prev_pkg[0] = '\0';
+
+    for (i = 0; i < pkgc; i++) pkgs[i] = in_pkgs[i];
+
+    f = fopen(pkgsfile, "r");
+    if (f == NULL) {
+        perror(pkgsfile);
+        exit(1);
+    }
+
+    skip = 1;
+    while (fgets(buf, sizeof(buf), f)) {
+        if (*buf && buf[strlen(buf)-1] == '\n') buf[strlen(buf)-1] = '\0';
+        if (strncasecmp(buf, "Package:", 8) == 0) {
+            int any = 0;
+            skip = 1;
+            fieldcpy(cur_pkg, buf);
+            if (strcmp(cur_pkg, prev_pkg) != 0) {
+                if (output_pkg != -1)
+                    pkgs[output_pkg] = NULL;
+                if (cur_deps[0])
+                    outputdeps(cur_deps);
+                if (cur_predeps[0])
+                    outputdeps(cur_predeps);
+                strcpy(prev_pkg, cur_pkg);
+            }
+            cur_deps[0] = cur_predeps[0] = '\0';
+            output_pkg = -1;
+	    for (i = 0; i < pkgc; i++) {
+		if (!pkgs[i]) continue;
+		any = 1;
+                if (strcmp(cur_pkg, pkgs[i]) == 0) {
+                    skip = 0;
+                    output_pkg = i;
+                    break;
+                }
+            }
+            if (!any) break;
+        } else if (!skip && strncasecmp(buf, "Depends:", 8) == 0)
+            fieldcpy(cur_deps, buf);
+        else if (!skip && strncasecmp(buf, "Pre-Depends:", 12) == 0)
+            fieldcpy(cur_predeps, buf);
+    }
+    if (cur_deps[0])
+        outputdeps(cur_deps);
+    if (cur_predeps[0])
+        outputdeps(cur_predeps);
+    fclose(f);
+}
+
+static void dopkgmirrorpkgs(int uniq, char *mirror, char *pkgsfile, 
+        char *fieldname, char **in_pkgs, int pkgc) 
+{
+    char buf[MAX_LINE];
+    char cur_field[MAX_LINE];
+    char cur_pkg[MAX_LINE];
+    char cur_ver[MAX_LINE];
+    char cur_arch[MAX_LINE];
+    char cur_size[MAX_LINE];
+    char cur_checksum[MAX_LINE];
+    char cur_filename[MAX_LINE];
+    char prev_pkg[MAX_LINE];
+    char *pkgs[MAX_PKGS];
+    int i;
+    FILE *f;
+    char *output = NULL;
+    int output_pkg = -1;
+
+    cur_field[0] = cur_pkg[0] = cur_ver[0] = cur_arch[0] = cur_filename[0] = prev_pkg[0] = '\0';
+
+    for (i = 0; i < pkgc; i++) pkgs[i] = in_pkgs[i];
+
+    f = fopen(pkgsfile, "r");
+    if (f == NULL) {
+        perror(pkgsfile);
+        exit(1);
+    }
+    while (fgets(buf, sizeof(buf), f)) {
+        if (*buf && buf[strlen(buf)-1] == '\n') buf[strlen(buf)-1] = '\0';
+        if (strncasecmp(buf, fieldname, strlen(fieldname)) == 0) {
+            fieldcpy(cur_field, buf);
+	}
+        if (strncasecmp(buf, "Package:", 8) == 0) {
+            fieldcpy(cur_pkg, buf);
+            if (strcmp(cur_pkg, prev_pkg) != 0) {
+                if (output)
+                    fputs(output, stdout);
+                if (uniq && output_pkg != -1)
+                    pkgs[output_pkg] = NULL;
+                strcpy(prev_pkg, cur_pkg);
+            }
+            free(output);
+            output = NULL;
+            output_pkg = -1;
+        } else if (strncasecmp(buf, "Version:", 8) == 0) {
+            fieldcpy(cur_ver, buf);
+        } else if (strncasecmp(buf, "Architecture:", 13) == 0) {
+            fieldcpy(cur_arch, buf);
+        } else if (strncasecmp(buf, "Size:", 5) == 0) {
+            fieldcpy(cur_size, buf);
+        } else if (strncasecmp(buf, checksum_field, strlen(checksum_field)) == 0
+	           && buf[strlen(checksum_field)] == ':') {
+            fieldcpy(cur_checksum, buf);
+        } else if (strncasecmp(buf, "Filename:", 9) == 0) {
+            fieldcpy(cur_filename, buf);
+        } else if (!*buf) {
+	    int any = 0;
+	    for (i = 0; i < pkgc; i++) {
+		if (!pkgs[i]) continue;
+		any = 1;
+                if (strcmp(cur_field, pkgs[i]) == 0) {
+                    free(output);
+                    output = xasprintf("%s %s %s %s %s %s %s\n", cur_pkg, cur_ver, cur_arch, mirror, cur_filename, cur_checksum, cur_size);
+                    output_pkg = i;
+		    break;
+		}
+            }
+	    if (!any) break;
+            cur_field[0] = '\0';
+        }
+    }
+    if (output)
+        fputs(output, stdout);
+    if (uniq && output_pkg != -1)
+        pkgs[output_pkg] = NULL;
+    fclose(f);
+
+    /* any that weren't found are returned as "pkg -" */
+    if (uniq) {
+        for (i = 0; i < pkgc; i++) {
+            if (pkgs[i]) {
+                printf("%s -\n", pkgs[i]);
+            }
+        }
+    }
+}
+
+static void dopkgstanzas(char *pkgsfile, char **pkgs, int pkgc)
+{
+    char buf[MAX_LINE];
+    char *accum;
+    size_t accum_size = 0, accum_alloc = MAX_LINE * 2;
+    char cur_pkg[MAX_LINE];
+    FILE *f;
+
+    accum = malloc(accum_alloc);
+    if (!accum)
+        oom_die();
+
+    f = fopen(pkgsfile, "r");
+    if (f == NULL) {
+        perror(pkgsfile);
+        free(accum);
+        exit(1);
+    }
+    while (fgets(buf, sizeof(buf), f)) {
+        if (*buf) {
+	    size_t len = strlen(buf);
+            if (accum_size + len + 1 > accum_alloc) {
+                accum_alloc = (accum_size + len + 1) * 2;
+                accum = realloc(accum, accum_alloc);
+                if (!accum)
+                    oom_die();
+            }
+            strcpy(accum + accum_size, buf);
+	    accum_size += len;
+        }
+        if (*buf && buf[strlen(buf)-1] == '\n') buf[strlen(buf)-1] = '\0';
+        if (strncasecmp(buf, "Package:", 8) == 0) {
+            fieldcpy(cur_pkg, buf);
+        } else if (!*buf) {
+            int i;
+            for (i = 0; i < pkgc; i++) {
+                if (!pkgs[i]) continue;
+                if (strcmp(cur_pkg, pkgs[i]) == 0) {
+                    fputs(accum, stdout);
+		    if (accum[accum_size - 1] != '\n')
+			fputs("\n\n", stdout);
+		    else if (accum[accum_size - 2] != '\n')
+			fputc('\n', stdout);
+                    break;
+                }
+            }
+            *accum = '\0';
+            accum_size = 0;
+        }
+    }
+    fclose(f);
+
+    free(accum);
+}
+
+static int dotranslatewgetpercent(int low, int high, int end, char *str) {
+    int ch;
+    int val, lastval;
+
+    /* print out anything that looks like a % on its own line, appropriately
+     * scaled */
+
+    lastval = val = 0;
+    while ( (ch = getchar()) != EOF ) {
+        if (isdigit(ch)) {
+	    val *= 10; val += ch - '0';
+	} else if (ch == '%') {
+	    float f = (float) val / 100.0 * (high - low) + low;
+	    if (str) {
+	    	printf("P: %d %d %s\n", (int) f, end, str);
+	    } else {
+	    	printf("P: %d %d\n", (int) f, end);
+	    }
+	    lastval = val;
+	} else {
+	    val = 0;
+	}
+    }
+    return lastval == 100;
+}
+
+int main(int argc, char *argv[]) {
+    checksum_field=getenv("DEBOOTSTRAP_CHECKSUM_FIELD");
+    if (checksum_field == NULL) {
+        checksum_field="MD5sum";
+    }
+
+    if ((argc == 6 || argc == 5) && strcmp(argv[1], "WGET%") == 0) {
+	if (dotranslatewgetpercent(atoi(argv[2]), atoi(argv[3]), 
+	                           atoi(argv[4]), argc == 6 ? argv[5] : NULL))
+	{
+	    exit(0);
+	} else {
+	    exit(1);
+	}
+    } else if (argc >= 4 && strcmp(argv[1], "GETDEPS") == 0) {
+        int i;
+        for (i = 3; argc - i > MAX_PKGS; i += MAX_PKGS) {
+	    dogetdeps(argv[2], argv+i, MAX_PKGS);
+	}
+	dogetdeps(argv[2], argv+i, argc-i);
+	exit(0);
+    } else if (argc >= 5 && strcmp(argv[1], "PKGS") == 0) {
+        int i;
+        for (i = 4; argc - i > MAX_PKGS; i += MAX_PKGS) {
+	    dopkgmirrorpkgs(1, argv[2], argv[3], "Package:", argv+i, MAX_PKGS);
+	}
+	dopkgmirrorpkgs(1, argv[2], argv[3], "Package:", argv+i, argc-i);
+	exit(0);
+    } else if (argc >= 6 && strcmp(argv[1], "FIELD") == 0) {
+        int i;
+        for (i = 5; argc - i > MAX_PKGS; i += MAX_PKGS) {
+	    dopkgmirrorpkgs(0, argv[3], argv[4], argv[2], argv+i, MAX_PKGS);
+	}
+	dopkgmirrorpkgs(0, argv[3], argv[4], argv[2], argv+i, argc-i);
+	exit(0);
+    } else if (argc >= 4 && strcmp(argv[1], "STANZAS") == 0) {
+	int i;
+	for (i = 3; argc - i > MAX_PKGS; i += MAX_PKGS) {
+	    dopkgstanzas(argv[2], argv+i, MAX_PKGS);
+	}
+	dopkgstanzas(argv[2], argv+i, argc-i);
+	exit(0);
+    } else {
+        fprintf(stderr, "usage: %s PKGS mirror packagesfile pkgs..\n", argv[0]);
+        fprintf(stderr, "   or: %s FIELD field mirror packagesfile pkgs..\n", 
+                argv[0]);
+        fprintf(stderr, "   or: %s GETDEPS packagesfile pkgs..\n", argv[0]);
+        fprintf(stderr, "   or: %s STANZAS packagesfile pkgs..\n", argv[0]);
+	fprintf(stderr, "   or: %s WGET%% low high end reason\n", argv[0]);
+        exit(1);
+    }
+}
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/package/pkgdetails-static/Makefile attitude.armel/package/pkgdetails-static/Makefile
--- attitude.orig/package/pkgdetails-static/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/package/pkgdetails-static/Makefile	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,35 @@
+#
+# Copyright (C) 2010 Gianluigi Tiesi <sherpya@netfarm.it>
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+
+include $(TOPDIR)/rules.mk
+
+PKG_NAME:=pkgdetails-static
+PKG_VERSION:=1.0.0
+PKG_RELEASE:=1
+
+include $(INCLUDE_DIR)/package.mk
+
+define Package/pkgdetails-static
+	SECTION:=admin
+	CATEGORY:=Administration
+	TITLE:=Helper program to bootstrap a basic Debian system
+	URL:=http://wiki.debian.org/Debootstrap
+endef
+
+TARGET_CFLAGS += -static
+
+define Build/Compile
+	mkdir -p $(PKG_INSTALL_DIR)/usr/share/debootstrap
+	$(TARGET_CC) $(TARGET_CFLAGS) $(TARGET_LDFLAGS) ./files/pkgdetails.c -o $(PKG_INSTALL_DIR)/usr/share/debootstrap/pkgdetails
+endef
+
+define Package/pkgdetails-static/install
+	$(INSTALL_DIR) $(1)/usr/share/debootstrap
+	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/share/debootstrap/pkgdetails $(1)/usr/share/debootstrap/
+endef
+
+$(eval $(call BuildPackage,pkgdetails-static))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/target/linux/android/config-3.3 attitude.armel/target/linux/android/config-3.3
--- attitude.orig/target/linux/android/config-3.3	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/target/linux/android/config-3.3	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,21 @@
+CONFIG_ARM=y
+CONFIG_ARCH_GOLDFISH=y
+CONFIG_PHYS_OFFSET=0x00000000
+CONFIG_UID16=y
+CONFIG_ARCH_VERSATILE_PB=y
+# CONFIG_MACH_VERSATILE_AB is not set
+# CONFIG_MACH_VERSATILE_DT is not set
+CONFIG_ARM_THUMB=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_WRITETHROUGH is not set
+# CONFIG_CPU_CACHE_ROUND_ROBIN is not set
+# CONFIG_PCI is not set
+# CONFIG_LEDS is not set
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+# CONFIG_VFP is not set
+# CONFIG_ARM_CHARLCD is not set
+# CONFIG_SERIAL_AMBA_PL011 is not set
+# CONFIG_ARM_SP805_WATCHDOG is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_DEBUG_USER is not set
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/target/linux/android/image/Makefile attitude.armel/target/linux/android/image/Makefile
--- attitude.orig/target/linux/android/image/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/target/linux/android/image/Makefile	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,10 @@
+#
+# Copyright (C) 2009-2010 OpenWrt.org
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+include $(TOPDIR)/rules.mk
+include $(INCLUDE_DIR)/image.mk
+
+$(eval $(call BuildImage))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/target/linux/android/Makefile attitude.armel/target/linux/android/Makefile
--- attitude.orig/target/linux/android/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/target/linux/android/Makefile	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,24 @@
+# Copyright (C) 2014 Sven-Ola
+#
+# This is free software, licensed under the GNU General Public License v2.
+# See /LICENSE for more information.
+#
+include $(TOPDIR)/rules.mk
+
+ARCH:=arm
+BOARD:=android
+BOARDNAME:=android
+FEATURES:=targz
+CFLAGS:=-O2 -pipe -march=armv5te -mtune=xscale -fno-caller-saves
+
+LINUX_VERSION:=3.3.8
+
+include $(INCLUDE_DIR)/target.mk
+
+DEFAULT_PACKAGES += kmod-tun
+
+define Target/Description
+	Build ipkg package files for Android phones
+endef
+
+$(eval $(call BuildTarget))
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/toolchain/gcc/patches/4.6-linaro/850-use_shared_libgcc.patch attitude.armel/toolchain/gcc/patches/4.6-linaro/850-use_shared_libgcc.patch
--- attitude.orig/toolchain/gcc/patches/4.6-linaro/850-use_shared_libgcc.patch	2014-05-02 09:40:57.000000000 +0200
+++ attitude.armel/toolchain/gcc/patches/4.6-linaro/850-use_shared_libgcc.patch	1970-01-01 01:00:00.000000000 +0100
@@ -1,68 +0,0 @@
---- a/gcc/config/arm/linux-eabi.h
-+++ b/gcc/config/arm/linux-eabi.h
-@@ -96,10 +96,6 @@
- #define ENDFILE_SPEC \
-   LINUX_OR_ANDROID_LD (GNU_USER_TARGET_ENDFILE_SPEC, ANDROID_ENDFILE_SPEC)
- 
--/* Use the default LIBGCC_SPEC, not the version in linux-elf.h, as we
--   do not use -lfloat.  */
--#undef LIBGCC_SPEC
--
- /* Clear the instruction cache from `beg' to `end'.  This is
-    implemented in lib1funcs.asm, so ensure an error if this definition
-    is used.  */
---- a/gcc/config/arm/linux-elf.h
-+++ b/gcc/config/arm/linux-elf.h
-@@ -60,8 +60,6 @@
-    %{shared:-lc} \
-    %{!shared:%{profile:-lc_p}%{!profile:-lc}}"
- 
--#define LIBGCC_SPEC "-lgcc"
--
- #define GLIBC_DYNAMIC_LINKER "/lib/ld-linux.so.2"
- 
- #define LINUX_TARGET_LINK_SPEC  "%{h*} \
---- a/gcc/config/linux.h
-+++ b/gcc/config/linux.h
-@@ -50,6 +50,10 @@ see the files COPYING3 and COPYING.RUNTI
- 	builtin_assert ("system=posix");			\
-     } while (0)
- 
-+#ifndef LIBGCC_SPEC
-+#define LIBGCC_SPEC "%{static|static-libgcc:-lgcc}%{!static:%{!static-libgcc:-lgcc_s}}"
-+#endif
-+
- /* Determine which dynamic linker to use depending on whether GLIBC or
-    uClibc or Bionic is the default C library and whether
-    -muclibc or -mglibc or -mbionic has been passed to change the default.  */
---- a/gcc/config/rs6000/linux.h
-+++ b/gcc/config/rs6000/linux.h
-@@ -88,6 +88,8 @@
- #define USE_LD_AS_NEEDED 1
- #endif
- 
-+#define LIBGCC_SPEC "%{!static:%{!static-libgcc:-lgcc_s}} -lgcc"
-+
- #undef  TARGET_VERSION
- #define TARGET_VERSION fprintf (stderr, " (PowerPC GNU/Linux)");
- 
---- a/gcc/mkmap-symver.awk
-+++ b/gcc/mkmap-symver.awk
-@@ -132,5 +132,5 @@ function output(lib) {
-   else if (inherit[lib])
-     printf("} %s;\n", inherit[lib]);
-   else
--    printf ("\n  local:\n\t*;\n};\n");
-+    printf ("\n\t*;\n};\n");
- }
---- a/libgcc/Makefile.in
-+++ b/libgcc/Makefile.in
-@@ -272,7 +272,7 @@ ifeq ($(enable_shared),yes)
- # For -fvisibility=hidden.  We need both a -fvisibility=hidden on
- # the command line, and a #define to prevent libgcc2.h etc from
- # overriding that with #pragmas.
--vis_hide = @vis_hide@
-+vis_hide =
- 
- ifneq (,$(vis_hide))
- 
diff -Nur --exclude='.*~' --exclude='*~' --exclude='*.old' --exclude='.*.old' --exclude=bin --exclude=build_dir --exclude=dl --exclude=nohup.out --exclude=scripts --exclude=staging_dir --exclude=tmp --exclude=.svn attitude.orig/toolchain/uClibc/patches-0.9.33.2/990-android-properties-dns.patch attitude.armel/toolchain/uClibc/patches-0.9.33.2/990-android-properties-dns.patch
--- attitude.orig/toolchain/uClibc/patches-0.9.33.2/990-android-properties-dns.patch	1970-01-01 01:00:00.000000000 +0100
+++ attitude.armel/toolchain/uClibc/patches-0.9.33.2/990-android-properties-dns.patch	2014-05-07 07:27:15.000000000 +0200
@@ -0,0 +1,593 @@
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/Makefile.in uClibc-0.9.33.2/libc/inet/Makefile.in
+--- uClibc-0.9.33.2.orig/libc/inet/Makefile.in	2012-05-15 09:20:09.000000000 +0200
++++ uClibc-0.9.33.2/libc/inet/Makefile.in	2014-05-02 15:03:05.000000000 +0200
+@@ -14,6 +14,7 @@
+ 
+ CFLAGS-inet := -DRESOLVER="\"resolv.c\""
+ CSRC-y :=
++CSRC-y += system_properties.c
+ # des uses ntohl
+ CSRC-$(findstring y,$(UCLIBC_HAS_CRYPT_IMPL)$(UCLIBC_HAS_IPV4)$(UCLIBC_HAS_IPV6)) += ntohl.c
+ CSRC-$(findstring y,$(UCLIBC_HAS_IPV4)$(UCLIBC_HAS_IPV6)) += \
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/resolv.c uClibc-0.9.33.2/libc/inet/resolv.c
+--- uClibc-0.9.33.2.orig/libc/inet/resolv.c	2014-05-02 14:17:56.000000000 +0200
++++ uClibc-0.9.33.2/libc/inet/resolv.c	2014-05-02 15:03:05.000000000 +0200
+@@ -319,6 +319,10 @@
+ #include <sys/stat.h>
+ #include <bits/uClibc_mutex.h>
+ #include "internal/parse_config.h"
++#include "sys/system_properties.h"
++
++#define DNS1_PROP "net.dns1"
++#define DNS2_PROP "net.dns2"
+ 
+ /* poll() is not supported in kernel <= 2.0, therefore if __NR_poll is
+  * not available, we assume an old Linux kernel is in use and we will
+@@ -955,6 +959,8 @@
+ 	return p;
+ }
+ 
++int __system_properties_init(void);
++
+ /* Must be called under __resolv_lock. */
+ void attribute_hidden __open_nameservers(void)
+ {
+@@ -979,6 +985,42 @@
+ 	if (__nameservers)
+ 		goto sync;
+ 
++	if (0 == __system_properties_init()) {
++		size_t idx = 0;
++		const char *props[2] = { DNS1_PROP, DNS2_PROP };
++		while(idx < sizeof(props) / sizeof(props[0])) {
++			char dns[PROP_VALUE_MAX];
++			if (0 < __system_property_get(props[idx], dns)) {
++				void *ptr;
++				memset(&sa, 0, sizeof(sa));
++				if (0) /* nothing */;
++#ifdef __UCLIBC_HAS_IPV6__
++				else if (0 < inet_pton(AF_INET6, dns, &sa.sa6.sin6_addr)) {
++					sa.sa6.sin6_family = AF_INET6;
++					sa.sa6.sin6_port = htons(NAMESERVER_PORT);
++				}
++#endif
++#ifdef __UCLIBC_HAS_IPV4__
++				else if (0 < inet_pton(AF_INET, dns, &sa.sa4.sin_addr)) {
++					sa.sa4.sin_family = AF_INET;
++					sa.sa4.sin_port = htons(NAMESERVER_PORT);
++				}
++#endif
++				else
++					continue; /* garbage in this property */
++				ptr = realloc(__nameserver, (__nameservers + 1) * sizeof(__nameserver[0]));
++				if (!ptr)
++					continue;
++				__nameserver = ptr;
++				__nameserver[__nameservers++] = sa; /* struct copy */
++			}
++			idx++;
++		}
++			
++		if (__nameservers)
++			goto sync;
++	}
++
+ 	__resolv_timeout = RES_TIMEOUT;
+ 	__resolv_attempts = RES_DFLRETRY;
+ 
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/sys/atomics.h uClibc-0.9.33.2/libc/inet/sys/atomics.h
+--- uClibc-0.9.33.2.orig/libc/inet/sys/atomics.h	1970-01-01 01:00:00.000000000 +0100
++++ uClibc-0.9.33.2/libc/inet/sys/atomics.h	2014-05-02 15:03:05.000000000 +0200
+@@ -0,0 +1,46 @@
++/*
++ * Copyright (C) 2008 The Android Open Source Project
++ * All rights reserved.
++ *
++ * Redistribution and use in source and binary forms, with or without
++ * modification, are permitted provided that the following conditions
++ * are met:
++ *  * Redistributions of source code must retain the above copyright
++ *    notice, this list of conditions and the following disclaimer.
++ *  * Redistributions in binary form must reproduce the above copyright
++ *    notice, this list of conditions and the following disclaimer in
++ *    the documentation and/or other materials provided with the
++ *    distribution.
++ *
++ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
++ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
++ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
++ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
++ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
++ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
++ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
++ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
++ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
++ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
++ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
++ * SUCH DAMAGE.
++ */
++#ifndef _SYS_ATOMICS_H
++#define _SYS_ATOMICS_H
++
++#include <sys/cdefs.h>
++#include <sys/time.h>
++
++__BEGIN_DECLS
++
++extern int __atomic_cmpxchg(int old, int _new, volatile int *ptr);
++extern int __atomic_swap(int _new, volatile int *ptr);
++extern int __atomic_dec(volatile int *ptr);
++extern int __atomic_inc(volatile int *ptr);
++
++int __futex_wait(volatile void *ftx, int val, const struct timespec *timeout);
++int __futex_wake(volatile void *ftx, int count);
++
++__END_DECLS
++
++#endif /* _SYS_ATOMICS_H */
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/sys/_system_properties.h uClibc-0.9.33.2/libc/inet/sys/_system_properties.h
+--- uClibc-0.9.33.2.orig/libc/inet/sys/_system_properties.h	1970-01-01 01:00:00.000000000 +0100
++++ uClibc-0.9.33.2/libc/inet/sys/_system_properties.h	2014-05-02 15:03:05.000000000 +0200
+@@ -0,0 +1,108 @@
++/*
++ * Copyright (C) 2008 The Android Open Source Project
++ * All rights reserved.
++ *
++ * Redistribution and use in source and binary forms, with or without
++ * modification, are permitted provided that the following conditions
++ * are met:
++ *  * Redistributions of source code must retain the above copyright
++ *    notice, this list of conditions and the following disclaimer.
++ *  * Redistributions in binary form must reproduce the above copyright
++ *    notice, this list of conditions and the following disclaimer in
++ *    the documentation and/or other materials provided with the
++ *    distribution.
++ *
++ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
++ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
++ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
++ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
++ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
++ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
++ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
++ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
++ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
++ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
++ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
++ * SUCH DAMAGE.
++ */
++
++#ifndef _INCLUDE_SYS__SYSTEM_PROPERTIES_H
++#define _INCLUDE_SYS__SYSTEM_PROPERTIES_H
++
++#ifndef _REALLY_INCLUDE_SYS__SYSTEM_PROPERTIES_H_
++#error you should #include <sys/system_properties.h> instead
++#else
++#include "system_properties.h"
++
++typedef struct prop_area prop_area;
++typedef struct prop_msg prop_msg;
++
++#define PROP_AREA_MAGIC   0x504f5250
++#define PROP_AREA_VERSION 0x45434f76
++
++#define PROP_SERVICE_NAME "property_service"
++
++/* #define PROP_MAX_ENTRIES 247 */
++/* 247 -> 32620 bytes (<32768) */
++
++#define TOC_NAME_LEN(toc)       ((toc) >> 24)
++#define TOC_TO_INFO(area, toc)  ((prop_info*) (((char*) area) + ((toc) & 0xFFFFFF)))
++
++struct prop_area {
++    unsigned volatile count;
++    unsigned volatile serial;
++    unsigned magic;
++    unsigned version;
++    unsigned reserved[4];
++    unsigned toc[1];
++};
++
++#define SERIAL_VALUE_LEN(serial) ((serial) >> 24)
++#define SERIAL_DIRTY(serial) ((serial) & 1)
++
++struct prop_info {
++    char name[PROP_NAME_MAX];
++    unsigned volatile serial;
++    char value[PROP_VALUE_MAX];
++};
++
++struct prop_msg 
++{
++    unsigned cmd;
++    char name[PROP_NAME_MAX];
++    char value[PROP_VALUE_MAX];
++};
++
++#define PROP_MSG_SETPROP 1
++    
++/*
++** Rules:
++**
++** - there is only one writer, but many readers
++** - prop_area.count will never decrease in value
++** - once allocated, a prop_info's name will not change
++** - once allocated, a prop_info's offset will not change
++** - reading a value requires the following steps
++**   1. serial = pi->serial
++**   2. if SERIAL_DIRTY(serial), wait*, then goto 1
++**   3. memcpy(local, pi->value, SERIAL_VALUE_LEN(serial) + 1)
++**   4. if pi->serial != serial, goto 2
++**
++** - writing a value requires the following steps
++**   1. pi->serial = pi->serial | 1
++**   2. memcpy(pi->value, local_value, value_len)
++**   3. pi->serial = (value_len << 24) | ((pi->serial + 1) & 0xffffff)
++**
++** Improvements:
++** - maintain the toc sorted by pi->name to allow lookup
++**   by binary search
++**
++*/
++
++#define PROP_PATH_RAMDISK_DEFAULT  "/default.prop"
++#define PROP_PATH_SYSTEM_BUILD     "/system/build.prop"
++#define PROP_PATH_SYSTEM_DEFAULT   "/system/default.prop"
++#define PROP_PATH_LOCAL_OVERRIDE   "/data/local.prop"
++
++#endif
++#endif
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/sys/system_properties.h uClibc-0.9.33.2/libc/inet/sys/system_properties.h
+--- uClibc-0.9.33.2.orig/libc/inet/sys/system_properties.h	1970-01-01 01:00:00.000000000 +0100
++++ uClibc-0.9.33.2/libc/inet/sys/system_properties.h	2014-05-02 15:03:05.000000000 +0200
+@@ -0,0 +1,85 @@
++/*
++ * Copyright (C) 2008 The Android Open Source Project
++ * All rights reserved.
++ *
++ * Redistribution and use in source and binary forms, with or without
++ * modification, are permitted provided that the following conditions
++ * are met:
++ *  * Redistributions of source code must retain the above copyright
++ *    notice, this list of conditions and the following disclaimer.
++ *  * Redistributions in binary form must reproduce the above copyright
++ *    notice, this list of conditions and the following disclaimer in
++ *    the documentation and/or other materials provided with the
++ *    distribution.
++ *
++ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
++ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
++ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
++ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
++ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
++ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
++ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
++ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
++ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
++ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
++ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
++ * SUCH DAMAGE.
++ */
++
++#ifndef _INCLUDE_SYS_SYSTEM_PROPERTIES_H
++#define _INCLUDE_SYS_SYSTEM_PROPERTIES_H
++
++#include <sys/cdefs.h>
++
++__BEGIN_DECLS
++
++typedef struct prop_info prop_info;
++
++#define PROP_NAME_MAX   32
++#define PROP_VALUE_MAX  92
++
++/* Look up a system property by name, copying its value and a
++** \0 terminator to the provided pointer.  The total bytes
++** copied will be no greater than PROP_VALUE_MAX.  Returns
++** the string length of the value.  A property that is not
++** defined is identical to a property with a length 0 value.
++*/
++int __system_property_get(const char *name, char *value);
++
++/* Return a pointer to the system property named name, if it
++** exists, or NULL if there is no such property.  Use 
++** __system_property_read() to obtain the string value from
++** the returned prop_info pointer.
++**
++** It is safe to cache the prop_info pointer to avoid future
++** lookups.  These returned pointers will remain valid for
++** the lifetime of the system.
++*/
++const prop_info *__system_property_find(const char *name);
++
++/* Read the value of a system property.  Returns the length
++** of the value.  Copies the value and \0 terminator into
++** the provided value pointer.  Total length (including
++** terminator) will be no greater that PROP_VALUE_MAX.
++**
++** If name is nonzero, up to PROP_NAME_MAX bytes will be
++** copied into the provided name pointer.  The name will
++** be \0 terminated.
++*/
++int __system_property_read(const prop_info *pi, char *name, char *value);
++
++/* Return a prop_info for the nth system property, or NULL if 
++** there is no nth property.  Use __system_property_read() to
++** read the value of this property.
++**
++** This method is for inspecting and debugging the property 
++** system.  Please use __system_property_find() instead.
++**
++** Order of results may change from call to call.  This is
++** not a bug.
++*/ 
++const prop_info *__system_property_find_nth(unsigned n);
++
++__END_DECLS
++
++#endif
+diff -Nur --exclude='.*' --exclude='*~' --exclude='*.o' --exclude=conf --exclude=.ex.zconf.c --exclude=mconf --exclude=zconf.hash.c --exclude=zconf.tab.c --exclude=config --exclude=nohup.out uClibc-0.9.33.2.orig/libc/inet/system_properties.c uClibc-0.9.33.2/libc/inet/system_properties.c
+--- uClibc-0.9.33.2.orig/libc/inet/system_properties.c	1970-01-01 01:00:00.000000000 +0100
++++ uClibc-0.9.33.2/libc/inet/system_properties.c	2014-05-02 15:03:50.000000000 +0200
+@@ -0,0 +1,261 @@
++/*
++ * Copyright (C) 2008 The Android Open Source Project
++ * All rights reserved.
++ *
++ * Redistribution and use in source and binary forms, with or without
++ * modification, are permitted provided that the following conditions
++ * are met:
++ *  * Redistributions of source code must retain the above copyright
++ *    notice, this list of conditions and the following disclaimer.
++ *  * Redistributions in binary form must reproduce the above copyright
++ *    notice, this list of conditions and the following disclaimer in
++ *    the documentation and/or other materials provided with the
++ *    distribution.
++ *
++ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
++ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
++ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
++ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
++ * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
++ * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
++ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
++ * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
++ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
++ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
++ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
++ * SUCH DAMAGE.
++ */
++#include <stdio.h>
++#include <stdlib.h>
++#include <unistd.h>
++#include <stddef.h>
++#include <errno.h>
++
++#include <sys/mman.h>
++
++#include <sys/socket.h>
++#include <sys/un.h>
++#include <sys/select.h>
++#include <sys/types.h>
++#include <netinet/in.h>
++
++#define _REALLY_INCLUDE_SYS__SYSTEM_PROPERTIES_H_
++#include "sys/_system_properties.h"
++
++#include "sys/atomics.h"
++
++#include <sys/syscall.h>
++#include <unistd.h>
++
++/*
++ * This syscall is required by Android's properties handling in system_properties.c
++ */
++int __futex_wait(volatile void *ftx, int val, const struct timespec *timeout)
++{
++    return syscall(SYS_futex, ftx, FUTEX_WAIT, val, (void *)timeout, NULL, NULL);
++}
++
++static const char property_service_name[] = PROP_SERVICE_NAME;
++
++static unsigned dummy_props = 0;
++
++prop_area *__system_property_area__ = (void*) &dummy_props;
++
++/* Detected PROP_NAME_MAX. Note, that android-x86.org uses a changed constant, see
++ * http://android-x86.git.sourceforge.net/git/gitweb.cgi?p=android-x86/x86_bionic.git;a=commitdiff;h=380a68a2b52f41bfdb0d2662b0e21281505037d5
++ */
++#define PROP_NAME_LIMIT 256
++static int prop_name_max = PROP_NAME_MAX;
++
++int __system_properties_init(void)
++{
++    prop_area *pa;
++    int fd;
++    unsigned sz;
++    char *env;
++
++    if(__system_property_area__ != ((void*) &dummy_props)) {
++        return 0;
++    }
++
++    env = getenv("ANDROID_PROPERTY_WORKSPACE");
++    if (!env) {
++        return -1;
++    }
++    fd = atoi(env);
++    env = strchr(env, ',');
++    if (!env) {
++        return -1;
++    }
++    sz = atoi(env + 1);
++    
++    pa = mmap(0, sz, PROT_READ, MAP_SHARED, fd, 0);
++    
++    if(pa == MAP_FAILED) {
++        return -1;
++    }
++
++    if((pa->magic != PROP_AREA_MAGIC) || (pa->version != PROP_AREA_VERSION)) {
++        munmap(pa, sz);
++        return -1;
++    }
++
++    __system_property_area__ = pa;
++    if (0 < pa->count) {
++        /*
++         * Yes - this is C. I like it, but it may have bugs :)
++         * Search the longest value in the /system/build.prop
++         * and /system/default.prop files with a name that starts
++         * with "ro." in order to search this read-only property to
++         * determine PROP_NAME_MAX later on.
++         */
++        int prop;
++        int minlen = 8;
++        char name[PROP_NAME_LIMIT];
++        char value[PROP_VALUE_MAX];
++        for (prop = 0; prop < 2; prop++) {
++            FILE* f = fopen(prop ? PROP_PATH_SYSTEM_BUILD : PROP_PATH_SYSTEM_DEFAULT, "r");
++            if (f)
++            {
++                char s[32 + PROP_NAME_LIMIT + PROP_VALUE_MAX];
++                while (fgets(s, sizeof(s), f))
++                {
++                    char* p = s;
++                    while (sizeof(s) > p - s && (' ' == *p || '\t' == *p)) p++;
++                    if (sizeof(s) > p - s && 0 == strncmp(p, "ro.", 3))
++                    {
++                        char* n = p;
++                        while (sizeof(s) > p - s && 0 != *p && '=' != *p && ' ' != *p && '\t' != *p) p++;
++                        if (sizeof(s) > p - s && 0 != *p)
++                        {
++                            char* nend = p;
++                            while (sizeof(s) > p - s && 0 != *p && '=' != *p) p++;
++                            if (sizeof(s) > p - s && '=' == *p)
++                            {
++                                char *v;
++                                *nend = 0;
++                                p++;
++                                while (sizeof(s) > p - s && (' ' == *p || '\t' == *p)) p++;
++                                v = p;
++                                while (sizeof(s) > p - s && (' ' <= *p)) p++;
++                                if (sizeof(s) > p - s)
++                                {
++                                    char *vend = p;
++                                    *vend = 0;
++                                    if (sizeof(name) > nend - n && sizeof(value) > vend - v && minlen < vend - v)
++                                    {
++                                        minlen = vend - v;
++                                        strcpy(name, n);
++                                        strcpy(value, v);
++                                    }
++                                }
++                            }
++                        }
++                    }
++                }
++                fclose(f);
++            }
++        }
++        if (8 < minlen)
++        {
++            const prop_info *pi = __system_property_find(name);
++            if (0 != pi)
++            {
++            	int m = PROP_NAME_MAX;
++            	while(m <= PROP_NAME_LIMIT)
++            	{
++            		if (0 == strcmp(pi->value + (m - PROP_NAME_MAX), value))
++            		{
++            			prop_name_max = m;
++            			break;
++            		}
++            		m++;
++            	}
++            }
++        }
++    }
++    return 0;
++}
++
++const prop_info *__system_property_find_nth(unsigned n)
++{
++    prop_area *pa = __system_property_area__;
++
++    if(n >= pa->count) {
++        return 0;
++    } else {
++        return TOC_TO_INFO(pa, pa->toc[n]);
++    }
++}
++
++const prop_info *__system_property_find(const char *name)
++{
++    prop_area *pa = __system_property_area__;
++    unsigned count = pa->count;
++    unsigned *toc = pa->toc;
++    unsigned len = strlen(name);
++    prop_info *pi;
++
++    while(count--) {
++        unsigned entry = *toc++;
++        if(TOC_NAME_LEN(entry) != len) continue;
++        
++        pi = TOC_TO_INFO(pa, entry);
++        if(memcmp(name, pi->name, len)) continue;
++
++        return pi;
++    }
++
++    return 0;
++}
++
++int __system_property_read(const prop_info *pi, char *name, char *value)
++{
++    unsigned serial, len;
++    
++    for(;;) {
++        serial = *(unsigned*)((char*)pi + prop_name_max);
++        while(SERIAL_DIRTY(serial)) {
++            __futex_wait((volatile void *)((char*)pi + prop_name_max), serial, 0);
++            serial = *(unsigned*)((char*)pi + prop_name_max);
++        }
++        len = SERIAL_VALUE_LEN(serial);
++        memcpy(value, (char*)pi + prop_name_max + sizeof(pi->serial), len + 1);
++        if(serial == *(unsigned*)((char*)pi + prop_name_max)) {
++            if(name != 0) {
++                strcpy(name, pi->name);
++            }
++            return len;
++        }
++    }
++}
++
++int __system_property_get(const char *name, char *value)
++{
++    const prop_info *pi = __system_property_find(name);
++
++    if(pi != 0) {
++        return __system_property_read(pi, 0, value);
++    } else {
++        value[0] = 0;
++        return 0;
++    }
++}
++
++int __system_property_wait(const prop_info *pi)
++{
++    unsigned n;
++    if(pi == 0) {
++        prop_area *pa = __system_property_area__;
++        n = pa->serial;
++        do {
++            __futex_wait(&pa->serial, n, 0);
++        } while(n == pa->serial);
++    } else {
++        n = pi->serial;
++        do {
++            __futex_wait((volatile void *)&pi->serial, n, 0);
++        } while(n == pi->serial);
++    }
++    return 0;
++}
